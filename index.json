[{"content":"I had earlier solved this issue in my previous arch DWM build but that was somehow broken; so had to configure this again. Considering it was such a pain I thought of sharing my own approach.\nI wrote a small script that changes the volume based on the parameters passed via DWM, once the volume is changed a notification is sent via dunst.\nIdentifying Keys You first need to identify which keys toggle the volume, what is their assigned tag.\nIt can be easily done by using the following command:\nxev | awk -F\u0026#39;[ )]+\u0026#39; \u0026#39;/^KeyPress/ { a[NR+2] } NR in a { printf \u0026#34;%-3s %s\\n\u0026#34;, $5, $8 }\u0026#39; In my case they were:\nXF86_AudioRaiseVolume XF86_AudioLowerVolume XF86_AudioMute Script The following script volstat to be created and added to path like /usr/local/bin/\n#!/bin/bash pamixer -$1 $2 # Below for showing volume level(numeric), its stacks # notify-send -t 1000 \u0026#34;Volume is: $(pamixer --get-volume)\u0026#34; # Progress bar dunstify -t 1000 \u0026#34;Volume: \u0026#34; -h int:value:\u0026#34;`pamixer --get-volume`\u0026#34; DWM config changes Include this package #include \u0026lt;X11/XF86keysym.h\u0026gt; in config.h also add the following lines:\n/* volume keys */ static const char *upvol[] = {\u0026#34;volstat\u0026#34;, \u0026#34;i\u0026#34;, \u0026#34;5\u0026#34;, NULL}; //increases volume by 5 static const char *downvol[] = {\u0026#34;volstat\u0026#34;, \u0026#34;d\u0026#34;, \u0026#34;5\u0026#34;, NULL}; //decreases volume by 5 static const char *toggle[] = {\u0026#34;pamixer\u0026#34;, \u0026#34;-t\u0026#34;, NULL}; //for muting /* add in static const Key keys[] = {..} */ { 0, XF86XK_AudioRaiseVolume, spawn, {.v = upvol} }, { 0, XF86XK_AudioLowerVolume, spawn, {.v = downvol} }, { 0, XF86XK_AudioMute, spawn, {.v = toggle} }, The key name might differ according to your device\nDo sudo make clean install and also add dunst \u0026amp; to your .xinitrc file.\nI didnt configure for mute keypress as visual feedback for that via led, was already present on my keyboard, but it can be done in a similar fashion.\nDemo ","permalink":"https://nakul.tech/posts/media-keys-volume/","summary":"\u003cp\u003eI had earlier solved this issue in my previous arch DWM \u003ca href=\"https://github.com/codernakul/arch-dwm-setup\"\u003ebuild\u003c/a\u003e but that was somehow broken; so had to configure this again. Considering it was such a pain I thought of sharing my own approach.\u003c/p\u003e\n\u003cp\u003eI wrote a small script that changes the volume based on the parameters passed via DWM, once the volume is changed a notification is sent via \u003ca href=\"https://wiki.archlinux.org/title/Dunst\"\u003edunst\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"identifying-keys\"\u003eIdentifying Keys\u003c/h2\u003e\n\u003cp\u003eYou first need to identify which keys toggle the volume, what is their assigned tag.\u003c/p\u003e","title":"Volume keys in DWM"},{"content":"Hi, Nakul here from now on I will be using this to write and maintain my own Blogs!\nThanks for reading!\n","permalink":"https://nakul.tech/posts/hello-world/","summary":"\u003cp\u003eHi, Nakul here from now on I will be using this to write and maintain my own Blogs!\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThanks for reading!\u003c/p\u003e\u003c/blockquote\u003e","title":"Hello World!"}]